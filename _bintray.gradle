apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = rootProject.ext.bintray.group
version = rootProject.ext.product.versionName

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId rootProject.ext.bintray.group
                // artifactId =
                // name =
                // description =
                url rootProject.ext.bintray.sitUrl

                licenses {
                    name rootProject.ext.bintray.licenseName
                    url rootProject.ext.bintray.licenseUrl
                }

                developers {
                    developer {
                        id rootProject.ext.bintray.developerId
                        name rootProject.ext.bintray.developerName
                        email rootProject.ext.bintray.developerEmail
                    }
                }
                scm {
                    connection rootProject.ext.bintray.gitUrl
                    developerConnection rootProject.ext.bintray.gitUrl
                    url rootProject.ext.bintray.siteUrl
                }
            }
        }
    }
}

Properties properties = localProperties()

bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')

    configurations ['archives']

    pkg {
        repo = rootProject.ext.bintray.repository
        // name =
        // desc =
        websiteUrl = rootProject.ext.bintray.siteUrl
        issueTrackerUrl = rootProject.ext.bintray.issuesUrl
        vscUrl = rootProject.ext.bintray.gitUrl
        licenses = rootProject.ext.bintray.licenses
        labels = rootProject.ext.bintray.labels
        publish = false
        publicDownloadNumbers = true
        userOrg = rootProject.ext.bintray.userOrg

        version {
            // name =
            // desc =
            vcsTag = rootProject.ext.product.versionName
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = "sources"
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

def localProperties() {
    return new Properties(project.rootProject.file('local.properties').newDataInputStream())
}
